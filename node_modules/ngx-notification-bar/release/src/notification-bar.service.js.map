{"version":3,"sources":["../../src/notification-bar.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAY,YAAA,EAAa,MAAO,eAAA,CAAgB;AAIzD;;GAEG;AAEH;IAKI;QAFA,aAAQ,GAAG,IAAI,YAAY,EAAgB,CAAC;IAG5C,CAAC;IAED,uCAAM,GAAN,UAAO,YAA0B;QAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;IACE,iCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,qCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,6BAAC;CAjBD,AAiBC,IAAA;SAjBY,sBAAsB","file":"notification-bar.service.js","sourceRoot":"","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\n\nimport { Notification } from '../index';\n\n/**\n * A service to create notification, It can be used from any component or guard\n */\n\nexport class NotificationBarService {\n\n\n    onCreate = new EventEmitter<Notification>();\n\n    constructor() {\n    }\n\n    create(notification: Notification) {\n        this.onCreate.emit(notification);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}