"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var level_1 = require("../level");
var Logger = (function () {
    function Logger(parent, description, additionalStreams) {
        if (additionalStreams === void 0) { additionalStreams = []; }
        this.parent = parent;
        this.description = description;
        this.additionalStreams = additionalStreams;
    }
    Logger.prototype.newScope = function (description, additionalStreams) {
        return new Logger(this, description, additionalStreams);
    };
    Logger.prototype.info = function (message) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.traverseUpward(level_1.Level.Info, this, message, args);
    };
    Logger.prototype.debug = function (message) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.traverseUpward(level_1.Level.Debug, this, message, args);
    };
    Logger.prototype.warn = function (message) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.traverseUpward(level_1.Level.Warning, this, message, args);
    };
    Logger.prototype.error = function (message) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.traverseUpward(level_1.Level.Error, this, message, args);
    };
    Logger.prototype.dispose = function () {
        for (var _i = 0, _a = this.additionalStreams || []; _i < _a.length; _i++) {
            var stream = _a[_i];
            stream.dispose();
        }
    };
    Logger.prototype.traverseUpward = function (level, scope, message, args) {
        for (var _i = 0, _a = this.additionalStreams || []; _i < _a.length; _i++) {
            var stream = _a[_i];
            stream.buffer(level, scope, message, args);
        }
        if (this.parent) {
            this.parent.traverseUpward(level, scope, message, args);
        }
    };
    return Logger;
}());
exports.Logger = Logger;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9ib25kL3Njb3BlZC1sb2dnZXIvdHNjb25maWcvIiwic291cmNlcyI6WyJsb2dnZXIvbG9nZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsa0NBQStCO0FBSS9CO0lBQ0UsZ0JBQ1MsTUFBYyxFQUNkLFdBQW1CLEVBQ25CLGlCQUFxQztRQUFyQyxrQ0FBQSxFQUFBLHNCQUFxQztRQUZyQyxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQ2QsZ0JBQVcsR0FBWCxXQUFXLENBQVE7UUFDbkIsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFvQjtJQUMzQyxDQUFDO0lBRUoseUJBQVEsR0FBUixVQUFTLFdBQW1CLEVBQUUsaUJBQWlDO1FBQzdELE1BQU0sQ0FBQyxJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVELHFCQUFJLEdBQUosVUFBSyxPQUFlO1FBQUUsY0FBbUI7YUFBbkIsVUFBbUIsRUFBbkIscUJBQW1CLEVBQW5CLElBQW1CO1lBQW5CLDZCQUFtQjs7UUFDdkMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFLLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVELHNCQUFLLEdBQUwsVUFBTSxPQUFlO1FBQUUsY0FBbUI7YUFBbkIsVUFBbUIsRUFBbkIscUJBQW1CLEVBQW5CLElBQW1CO1lBQW5CLDZCQUFtQjs7UUFDeEMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELHFCQUFJLEdBQUosVUFBSyxPQUFlO1FBQUUsY0FBbUI7YUFBbkIsVUFBbUIsRUFBbkIscUJBQW1CLEVBQW5CLElBQW1CO1lBQW5CLDZCQUFtQjs7UUFDdkMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFLLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVELHNCQUFLLEdBQUwsVUFBTSxPQUFlO1FBQUUsY0FBbUI7YUFBbkIsVUFBbUIsRUFBbkIscUJBQW1CLEVBQW5CLElBQW1CO1lBQW5CLDZCQUFtQjs7UUFDeEMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELHdCQUFPLEdBQVA7UUFDRSxHQUFHLENBQUMsQ0FBaUIsVUFBNEIsRUFBNUIsS0FBQSxJQUFJLENBQUMsaUJBQWlCLElBQUksRUFBRSxFQUE1QixjQUE0QixFQUE1QixJQUE0QjtZQUE1QyxJQUFNLE1BQU0sU0FBQTtZQUNmLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNsQjtJQUNILENBQUM7SUFFTywrQkFBYyxHQUF0QixVQUF1QixLQUFZLEVBQUUsS0FBWSxFQUFFLE9BQWUsRUFBRSxJQUFnQjtRQUNsRixHQUFHLENBQUMsQ0FBaUIsVUFBNEIsRUFBNUIsS0FBQSxJQUFJLENBQUMsaUJBQWlCLElBQUksRUFBRSxFQUE1QixjQUE0QixFQUE1QixJQUE0QjtZQUE1QyxJQUFNLE1BQU0sU0FBQTtZQUNmLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDNUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNoQixJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMxRCxDQUFDO0lBQ0gsQ0FBQztJQUNILGFBQUM7QUFBRCxDQUFDLEFBMUNELElBMENDO0FBMUNZLHdCQUFNIn0=