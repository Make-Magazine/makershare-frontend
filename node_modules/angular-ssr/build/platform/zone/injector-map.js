Object.defineProperty(exports, "__esModule", { value: true });
require("zone.js");
var exception_1 = require("../../exception");
var map = new Map();
exports.mapZoneToInjector = function (zone, injector) {
    if (map.get(zone)) {
        throw new exception_1.PlatformException("Zone " + zone.name + " is mapped to an existing injector and a zone can not be mapped to more than one injector");
    }
    map.set(zone, injector);
    return function () {
        map.delete(zone);
    };
};
exports.zoneToInjector = function (zone) {
    for (var iterator = zone; iterator; iterator = iterator.parent) {
        var injector = map.get(iterator);
        if (injector) {
            return injector;
        }
    }
    return undefined;
};
exports.injectableFromZone = function (zone, token) {
    var injector = exports.zoneToInjector(zone);
    if (injector) {
        return injector.get(token, null);
    }
    return null;
};
//# sourceMappingURL=injector-map.js.map