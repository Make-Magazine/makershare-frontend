var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.forkZone = function (documentTemplate, requestUri, properties) {
    return Zone.current.fork(__assign({ name: requestUri, properties: {
            documentTemplate: documentTemplate,
            requestUri: requestUri,
        } }, properties));
};
exports.forkZoneExecute = function (documentTemplate, requestUri, execute) {
    var failure = function (exception) { return true; }; // rethrow
    var zone = exports.forkZone(documentTemplate, requestUri, {
        onHandleError: function (parentZoneDelegate, currentZone, targetZone, error) {
            return failure(error);
        }
    });
    return new Promise(function (resolve, reject) {
        failure = function (exception) {
            reject(exception);
            return false;
        };
        return zone.runGuarded(function () { return Promise.resolve(execute()).then(resolve).catch(reject); });
    });
};
//# sourceMappingURL=fork.js.map