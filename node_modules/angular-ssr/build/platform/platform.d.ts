import { CompilerOptions, Injector, NgModuleFactory, NgModuleRef, PlatformRef, Provider, Type } from '@angular/core';
export declare class ServerPlatform implements PlatformRef {
    injector: Injector;
    private readonly references;
    private destroyers;
    constructor(injector: Injector);
    compileModule<M>(moduleType: Type<M>, compilerOptions?: CompilerOptions | Array<CompilerOptions>): Promise<NgModuleFactory<M>>;
    bootstrapModule<M>(moduleType: Type<M>, compilerOptions?: CompilerOptions | Array<CompilerOptions>, providers?: Array<Provider>): Promise<NgModuleRef<M>>;
    bootstrapModuleFactory<M>(module: NgModuleFactory<M>, providers?: Array<Provider>, bootstrap?: (moduleRef: NgModuleRef<M>) => void | Promise<void>): Promise<NgModuleRef<M>>;
    private getCompiler(compilerOptions?);
    onDestroy(callback: () => void): void;
    readonly destroyed: boolean;
    destroy(): Promise<void>;
}
