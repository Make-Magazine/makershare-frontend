Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var url = require("url");
var document_1 = require("../document");
var exception_1 = require("../../exception");
var LocationImpl = (function () {
    function LocationImpl(requestUri, documentContainer) {
        var _this = this;
        this.requestUri = requestUri;
        this.documentContainer = documentContainer;
        this.destruction = new Array();
        this.documentContainer.document.location.assign(requestUri);
        this.initializationPromise = new Promise(function (resolve) { return _this.initialized = function () { return resolve(); }; });
    }
    LocationImpl.prototype.initializationComplete = function () {
        this.initialized();
    };
    LocationImpl.prototype.assign = function (uri) {
        throw new exception_1.NotSupportedException();
    };
    LocationImpl.prototype.replace = function (uri) {
        throw new exception_1.NotSupportedException();
    };
    LocationImpl.prototype.reload = function () {
        throw new exception_1.NotSupportedException();
    };
    Object.defineProperty(LocationImpl.prototype, "href", {
        get: function () {
            return this.requestUri;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LocationImpl.prototype, "host", {
        get: function () {
            return this.parsed(function (u) { return u.host; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LocationImpl.prototype, "hostname", {
        get: function () {
            return this.parsed(function (u) { return u.hostname; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LocationImpl.prototype, "origin", {
        get: function () {
            return this.requestUri;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LocationImpl.prototype, "port", {
        get: function () {
            return this.parsed(function (u) { return u.port; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LocationImpl.prototype, "protocol", {
        get: function () {
            return this.parsed(function (u) { return u.protocol; });
        },
        enumerable: true,
        configurable: true
    });
    LocationImpl.prototype.getBaseHrefFromDOM = function () {
        var element = this.documentContainer.document.querySelector('base');
        if (element == null) {
            return null;
        }
        return element.getAttribute('href') || '/';
    };
    LocationImpl.prototype.onPopState = function (fn) {
        var _this = this;
        this.documentContainer.window.addEventListener('popstate', fn, false);
        this.destruction.push(function () { return _this.documentContainer.window.removeEventListener('popstate', fn); });
    };
    LocationImpl.prototype.onHashChange = function (fn) {
        var _this = this;
        this.documentContainer.window.addEventListener('hashchange', fn, false);
        this.destruction.push(function () { return _this.documentContainer.window.removeEventListener('hashchange', fn); });
    };
    Object.defineProperty(LocationImpl.prototype, "pathname", {
        get: function () {
            return this.documentContainer.window.location.pathname;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LocationImpl.prototype, "search", {
        get: function () {
            return this.documentContainer.window.location.search;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LocationImpl.prototype, "hash", {
        get: function () {
            return this.documentContainer.window.location.hash;
        },
        enumerable: true,
        configurable: true
    });
    LocationImpl.prototype.replaceState = function (state, title, url) {
        this.documentContainer.window.location.hash = url;
    };
    LocationImpl.prototype.pushState = function (state, title, url) {
        this.documentContainer.window.location.hash = url;
    };
    LocationImpl.prototype.forward = function () {
        this.documentContainer.window.history.forward();
    };
    LocationImpl.prototype.back = function () {
        this.documentContainer.window.history.back();
    };
    LocationImpl.prototype.ngOnDestroy = function () {
        this.destruction.forEach(function (d) { return d(); });
    };
    LocationImpl.prototype.parsed = function (fn) {
        try {
            return fn(url.parse(this.href));
        }
        catch (exception) {
            return null;
        }
    };
    return LocationImpl;
}());
LocationImpl.decorators = [
    { type: core_1.Injectable },
];
/** @nocollapse */
LocationImpl.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: core_1.Inject, args: [document_1.RequestUri,] },] },
    { type: document_1.DocumentContainer, },
]; };
exports.LocationImpl = LocationImpl;
//# sourceMappingURL=location.js.map