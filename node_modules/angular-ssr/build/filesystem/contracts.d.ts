import { Predicate } from '../predicate';
import { FileType } from './type';
export interface FilesystemBase {
    name(): string;
    parent(): PathReference;
    type(): FileType;
    exists(): boolean;
    equals(other: FilesystemBase): boolean;
}
export interface FileReference extends FilesystemBase {
    create(content: string): void;
    content(): string;
    unlink(): void;
}
export interface PathReference extends FilesystemBase {
    directories(predicate?: RegExp | Predicate<PathReference>): Set<PathReference>;
    files(predicate?: RegExp | Predicate<FileReference>): Set<FileReference>;
    findInAncestor(file: string): FilesystemBase;
    mkdir(): void;
    unlink(): void;
}
