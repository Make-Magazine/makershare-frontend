Object.defineProperty(exports, "__esModule", { value: true });
var path_1 = require("path");
var typescript_1 = require("typescript");
var __1 = require("..");
var filesystem_1 = require("../../../../filesystem");
var static_1 = require("../../../../static");
describe('Module discovery', function () {
    var createExampleProgram = function (root) {
        var moduleFile = sourceToSourceFile(root.toString(), "\n      import {NgModule} from '@angular/core';\n\n      @NgModule()\n      export class RootModule {}\n    ");
        var mainFile = sourceToSourceFile(root.toString(), "\n      import {RootModule} from './" + moduleFile.fileName.replace(/\.ts$/, String()) + "';\n\n      platformBrowserDynamic().bootstrapModule(RootModule);\n    ");
        var options = { target: typescript_1.ScriptTarget.ES5 };
        var host = typescript_1.createCompilerHost(options);
        var getSourceFile = host.getSourceFile.bind(host);
        host.getSourceFile = function (filename, languageVersion) {
            switch (filename) {
                case moduleFile.fileName:
                    return moduleFile;
                case mainFile.fileName:
                    return mainFile;
                default:
                    return getSourceFile(filename, languageVersion);
            }
        };
        host.fileExists = function (filename) { return filename === moduleFile.fileName || filename === mainFile.fileName; };
        return [moduleFile.fileName, typescript_1.createProgram([moduleFile.fileName, mainFile.fileName], options, host)];
    };
    var moduleFile;
    var program;
    var root;
    beforeAll(function () {
        root = filesystem_1.pathFromRandomId();
        _a = createExampleProgram(root), moduleFile = _a[0], program = _a[1];
        var _a;
    });
    it('can locate root application module in a project', function () {
        var descriptor = __1.discoverRootModule(root, program);
        expect(descriptor).not.toBeNull();
        expect(descriptor.source).toEqual(moduleFile.replace(/(^(\\|\/)|\.ts$)/g, String()));
        expect(descriptor.symbol).toEqual('RootModule');
    });
    it('can discover all @NgModule classes in a project', function () {
        var modules = __1.collectModules(root, program);
        expect(modules).not.toBeNull();
        expect(modules.length).toBe(1);
        expect(modules[0].source).toEqual(moduleFile.replace(/\.(ts|js)$/i, String()));
        expect(modules[0].symbol).toEqual('RootModule');
    });
});
var sourceToSourceFile = function (root, code) { return typescript_1.createSourceFile(path_1.join(root, static_1.randomId() + ".ts"), code, typescript_1.ScriptTarget.ES5, true); };
//# sourceMappingURL=modules.js.map