Object.defineProperty(exports, "__esModule", { value: true });
var exception_1 = require("../../../exception");
var NgcModuleLoader = (function () {
    function NgcModuleLoader(project, build) {
        this.project = project;
        this.build = build;
    }
    NgcModuleLoader.prototype.load = function () {
        return this.loadModule(this.project.applicationModule);
    };
    NgcModuleLoader.prototype.lazy = function (module) {
        return this.loadModule(module);
    };
    NgcModuleLoader.prototype.dispose = function () {
        this.build.dispose();
    };
    NgcModuleLoader.prototype.loadModule = function (module) {
        var _a = this.build.resolve(module), resolvedModule = _a[0], symbol = _a[1];
        if (resolvedModule == null) {
            throw new exception_1.CompilerException("Cannot find a generated NgFactory matching the name " + module.source + " with a symbol " + module.symbol);
        }
        var loadedModule = require(resolvedModule);
        if (symbol) {
            if (loadedModule[symbol] == null) {
                throw new exception_1.CompilerException("Module " + module.source + " does not contain a symbol named " + symbol);
            }
            return loadedModule[symbol];
        }
        return loadedModule;
    };
    return NgcModuleLoader;
}());
exports.NgcModuleLoader = NgcModuleLoader;
//# sourceMappingURL=loader.js.map