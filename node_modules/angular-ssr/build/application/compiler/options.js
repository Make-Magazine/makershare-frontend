Object.defineProperty(exports, "__esModule", { value: true });
var tsc_1 = require("@angular/tsc-wrapped/src/tsc");
var typescript_1 = require("typescript");
var path_1 = require("path");
var exception_1 = require("../../exception");
var static_1 = require("../static");
exports.projectToOptions = function (project) {
    var tsc = new tsc_1.Tsc();
    var _a = tsc.readConfiguration(project.tsconfig.toString(), project.basePath.toString()), parsed = _a.parsed, ng = _a.ngOptions;
    var ts = adjustOptions(parsed.options);
    ng.basePath = project.basePath.toString();
    ts.declaration = true;
    ng.declaration = true;
    ng.genDir = ts.outDir ? path_1.relative(project.basePath.toString(), ts.outDir) : null;
    ng.basePath = project.basePath.toString();
    ng.skipMetadataEmit = false;
    ng.skipTemplateCodegen = false;
    ng.enableLegacyTemplate = true;
    var sources = parsed.fileNames.filter(function (file) { return testHeuristic(file) === false; });
    return { ts: ts, ng: ng, sources: sources };
};
var adjustOptions = function (baseOptions) {
    return Object.assign({}, baseOptions, {
        declaration: true,
        target: typescript_1.ScriptTarget.ES5,
        module: typescript_1.ModuleKind.CommonJS,
        moduleResolution: typescript_1.ModuleResolutionKind.NodeJs,
        noEmitHelpers: false,
    });
};
var testHeuristic = function (filename) { return /(e2e|\.?(spec|tests?)\.)/.test(filename); };
exports.loadApplicationModule = function (program, basePath, module) {
    var invalid = function () { return !module || !module.source || !module.symbol; };
    if (invalid()) {
        module = static_1.discoverRootModule(basePath, program);
        if (invalid()) {
            throw new exception_1.CompilerException("Cannot discover the source file containing the root application NgModule and the name of the module, please use explicit options");
        }
    }
    return module;
};
//# sourceMappingURL=options.js.map