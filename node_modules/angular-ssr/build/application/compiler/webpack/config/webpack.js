Object.defineProperty(exports, "__esModule", { value: true });
var exception_1 = require("../../../../exception");
var static_1 = require("../../../../static");
var filesystem_1 = require("../../../../filesystem");
var WebpackLoader = (function () {
    function WebpackLoader() {
    }
    WebpackLoader.prototype.load = function (project) {
        var basePath = filesystem_1.pathFromString(project.basePath);
        if (project.webpack == null) {
            var matches = basePath.files(function (f) { return static_1.Files.webpack.find(function (c) { return c === f.name(); }) != null; });
            switch (matches.size) {
                case 0:
                    throw new exception_1.CompilerException("Cannot find a webpack configuration in " + project.basePath + ", use explicit name command-line arguments");
                case 1:
                    project.webpack = Array.from(matches.values())[0];
                    break;
                default:
                    throw new exception_1.CompilerException("Multiple possible webpack configurations found, choose one explicitly: " + Array.from(matches).map(function (m) { return m.name(); }).join(', '));
            }
        }
        if (project.webpack.exists() === false) {
            throw new exception_1.CompilerException("Webpack configuration file does not exist: " + project.webpack.toString());
        }
        return require(project.webpack.toString());
    };
    return WebpackLoader;
}());
exports.WebpackLoader = WebpackLoader;
//# sourceMappingURL=webpack.js.map