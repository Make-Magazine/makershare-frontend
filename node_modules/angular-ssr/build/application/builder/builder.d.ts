import { ApplicationBootstrapper, ApplicationStateReader, Postprocessor, VariantsMap } from '../contracts';
import { Application } from './application';
import { PrebootConfiguration } from '../preboot';
import { Route } from '../../route/route';
export interface ApplicationBuilder<V> {
    build(): Application<V>;
    templateDocument(template?: string): string | undefined;
    bootstrap(bootstrapper: ApplicationBootstrapper): void;
    variants(definitions?: VariantsMap): void;
    routes(routes?: Array<Route>): void;
    stateReader<R>(stateReader?: ApplicationStateReader<R>): void;
    postprocess(transform?: Postprocessor): void;
    preboot(preboot?: PrebootConfiguration | boolean): void;
    blacklist(blacklist?: boolean): void;
    stabilizeTimeout(milliseconds?: number): number | null;
}
