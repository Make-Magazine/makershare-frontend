var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var router_1 = require("@angular/router");
var common_1 = require("@angular/common");
var fixtures_1 = require("../../../test/fixtures");
var snapshot_1 = require("../../../snapshot");
var route_1 = require("../../../route");
describe('applicationBuilderFromModule', function () {
    it('should require a template document in order to render', function () {
        try {
            var application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicInlineModule, function (builder) { return builder.templateDocument(String()); });
            application.dispose();
            return Promise.reject(new Error('Expected an exception to be thrown'));
        }
        catch (exception) {
            return Promise.resolve();
        }
    });
    it('should be able to render a Hello World application with inline template', function () { return __awaiter(_this, void 0, void 0, function () {
        var application;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicInlineModule);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            application.prerender().subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                var expr = /<application ng-version="([^"]+)"><div>Hello!<\/div><\/application>/;
                                expect(snapshot.exceptions).not.toBeNull();
                                expect(snapshot.exceptions.length).toBe(0);
                                expect(snapshot.variant).toBeUndefined();
                                expect(snapshot.applicationState).toBeUndefined();
                                expect(expr.test(fixtures_1.trimDocument(snapshot.renderedDocument))).toBeTruthy();
                                resolve();
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('should be able to render a Hello World application with external template', function () { return __awaiter(_this, void 0, void 0, function () {
        var application;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicExternalModule);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            application.prerender().subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                var expr = /<application ng-version="([^"]+)"><div>Hello!<\/div><\/application>/;
                                expect(snapshot.exceptions).not.toBeNull();
                                expect(snapshot.exceptions.length).toBe(0);
                                expect(snapshot.variant).toBeUndefined();
                                expect(snapshot.applicationState).toBeUndefined();
                                expect(expr.test(fixtures_1.trimDocument(snapshot.renderedDocument))).toBeTruthy();
                                resolve();
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('should be able to render a Hello World application with external template and SCSS styles', function () { return __awaiter(_this, void 0, void 0, function () {
        var application;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicExternalStyledModule);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            application.prerender().subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                var expr = /div\[_ngcontent-([^\]]+)\] { background-color: black;/;
                                expect(snapshot.exceptions).not.toBeNull();
                                expect(snapshot.exceptions.length).toBe(0);
                                expect(snapshot.variant).toBeUndefined();
                                expect(snapshot.applicationState).toBeUndefined();
                                expect(expr.test(fixtures_1.trimDocument(snapshot.renderedDocument))).toBeTruthy();
                                resolve();
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('should be able to render an application that uses the router', function () { return __awaiter(_this, void 0, void 0, function () {
        var expectedCount, snapshots;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    expectedCount = 2;
                    return [4 /*yield*/, fixtures_1.renderModuleFixture(fixtures_1.BasicRoutedModule)];
                case 1:
                    snapshots = _a.sent();
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            snapshots.subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                expect(snapshot.exceptions).not.toBeNull();
                                expect(snapshot.exceptions.length).toBe(0);
                                expect(snapshot.variant).toBeUndefined();
                                expect(snapshot.applicationState).toBeUndefined();
                                expect(/Routed/.test(fixtures_1.trimDocument(snapshot.renderedDocument))).toBeTruthy();
                                if (--expectedCount === 0) {
                                    resolve();
                                }
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
            }
        });
    }); });
    it('should fail if state reader throws an exception or returns a rejected promise', function () { return __awaiter(_this, void 0, void 0, function () {
        var application, stream;
        return __generator(this, function (_a) {
            application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicRoutedModule, function (builder) {
                builder.stateReader(function () { return Promise.reject('This is an expected exception'); });
            });
            stream = application.prerender();
            return [2 /*return*/, new Promise(function (resolve, reject) {
                    stream.subscribe(function (s) { return reject(new Error('Should have thrown an exception and failed')); }, resolve);
                })];
        });
    }); });
    it('should be able to transmit state from the server to the client in the prerendered document', function () { return __awaiter(_this, void 0, void 0, function () {
        var application, snapshots_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicRoutedModule, function (builder) {
                        builder.stateReader(function (injector) {
                            var router = injector.get(router_1.Router);
                            var routes = route_1.extractRoutesFromRouter(router, injector.get(common_1.LocationStrategy));
                            return Promise.resolve(routes.map(function (r) { return r.path; }));
                        });
                    });
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    snapshots_1 = application.prerender();
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            snapshots_1.subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                expect(snapshot.applicationState).not.toBeNull();
                                expect(Array.isArray(snapshot.applicationState)).toBeTruthy();
                                var expr = /<script type="text\/javascript">window.bootstrapApplicationState = \[\[\],\["one"\]\];<\/script>/;
                                expect(expr.test(fixtures_1.trimDocument(snapshot.renderedDocument))).toBeTruthy();
                                resolve();
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('can render a specific URI on demand', function () { return __awaiter(_this, void 0, void 0, function () {
        var application, snapshot;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicRoutedModule);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    return [4 /*yield*/, application.renderUri('http://localhost/one')];
                case 2:
                    snapshot = _a.sent();
                    snapshot_1.assertSnapshot(snapshot);
                    expect(snapshot.uri).toBe('http://localhost/one');
                    expect(snapshot.exceptions.length).toBe(0);
                    expect(snapshot.exceptions).not.toBeNull();
                    expect(snapshot.exceptions.length).toBe(0);
                    expect(snapshot.variant).toBeUndefined();
                    expect(snapshot.applicationState).toBeUndefined();
                    expect(snapshot.renderedDocument).not.toBeNull();
                    expect(/Routed/.test(fixtures_1.trimDocument(snapshot.renderedDocument))).toBeTruthy();
                    return [3 /*break*/, 4];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('can collect console log statements that happen during application execution', function () { return __awaiter(_this, void 0, void 0, function () {
        var application, snapshots_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicRoutedModule);
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    snapshots_2 = application.prerender();
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            snapshots_2.subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                expect(snapshot.console).not.toBeNull();
                                expect(Array.isArray(snapshot.console)).toBeTruthy();
                                expect(snapshot.console.length).toBe(1);
                                expect(snapshot.console[0].type).toBe(snapshot_1.ConsoleType.Log);
                                expect(snapshot.console[0].args.length).toBe(1);
                                expect(/enableProdMode/.test(snapshot.console[0].args[0])).toBeTruthy();
                                resolve();
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('can inject preboot initialization code into rendered document', function () { return __awaiter(_this, void 0, void 0, function () {
        var application, snapshots_3;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicInlineModule, function (b) { return b.preboot({ appRoot: 'application' }); });
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    snapshots_3 = application.prerender();
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            snapshots_3.subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                var expr = /prebootstrap\(\).init\({(.*),"appRoot":"application"}\);/;
                                expect(snapshot.exceptions).not.toBeNull();
                                expect(snapshot.exceptions.length).toBe(0);
                                expect(snapshot.variant).toBeUndefined();
                                expect(snapshot.applicationState).toBeUndefined();
                                expect(expr.test(fixtures_1.trimDocument(snapshot.renderedDocument))).toBeTruthy();
                                resolve();
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('can auto-detect root component selector when injecting preboot code', function () { return __awaiter(_this, void 0, void 0, function () {
        var application, snapshots_4;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicInlineModule, function (b) { return b.preboot(true); });
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    snapshots_4 = application.prerender();
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            snapshots_4.subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                var expr = /prebootstrap\(\).init\({(.*),"appRoot":\["application"\]}\);/;
                                expect(snapshot.exceptions).not.toBeNull();
                                expect(snapshot.exceptions.length).toBe(0);
                                expect(snapshot.variant).toBeUndefined();
                                expect(snapshot.applicationState).toBeUndefined();
                                expect(expr.test(fixtures_1.trimDocument(snapshot.renderedDocument))).toBeTruthy();
                                resolve();
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('can inject preboot initialization code into rendered document', function () { return __awaiter(_this, void 0, void 0, function () {
        var application, snapshots_5;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicInlineModule, function (b) { return b.preboot({ appRoot: 'application' }); });
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    snapshots_5 = application.prerender();
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            snapshots_5.subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                var expr = /prebootstrap\(\).init\({(.*),"appRoot":"application"}\);/;
                                expect(snapshot.exceptions).not.toBeNull();
                                expect(snapshot.exceptions.length).toBe(0);
                                expect(snapshot.variant).toBeUndefined();
                                expect(snapshot.applicationState).toBeUndefined();
                                expect(expr.test(fixtures_1.trimDocument(snapshot.renderedDocument))).toBeTruthy();
                                resolve();
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('can apply postprocessor to DOM', function () { return __awaiter(_this, void 0, void 0, function () {
        var application, snapshots_6;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicInlineModule, function (b) {
                        b.postprocess(function (document, rendered) {
                            var element = document.createElement('style');
                            element.setAttribute('type', 'text/css');
                            element.textContent = "\n            body {\n              margin: 1em;\n            }";
                            document.head.appendChild(element);
                        });
                    });
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    snapshots_6 = application.prerender();
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            snapshots_6.subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                var expr1 = /<application ng-version="([^"]+)"><div>Hello!<\/div><\/application>/;
                                var expr2 = /margin: 1em/;
                                expect(snapshot.exceptions).not.toBeNull();
                                expect(snapshot.exceptions.length).toBe(0);
                                expect(snapshot.variant).toBeUndefined();
                                expect(snapshot.applicationState).toBeUndefined();
                                var trimmed = fixtures_1.trimDocument(snapshot.renderedDocument);
                                expect(expr1.test(trimmed)).toBeTruthy();
                                expect(expr2.test(trimmed)).toBeTruthy();
                                resolve();
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('can apply postprocessor to rendered document string', function () { return __awaiter(_this, void 0, void 0, function () {
        var application, snapshots_7;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicInlineModule, function (b) { return b.postprocess(function (document, rendered) { return rendered.replace('Hello!', 'What up sucka!'); }); });
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    snapshots_7 = application.prerender();
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            snapshots_7.subscribe(function (snapshot) {
                                snapshot_1.assertSnapshot(snapshot);
                                var expr = /<application ng-version="([^"]+)"><div>What up sucka!<\/div><\/application>/;
                                expect(snapshot.exceptions).not.toBeNull();
                                expect(snapshot.exceptions.length).toBe(0);
                                expect(snapshot.variant).toBeUndefined();
                                expect(snapshot.applicationState).toBeUndefined();
                                expect(expr.test(fixtures_1.trimDocument(snapshot.renderedDocument))).toBeTruthy();
                                resolve();
                            }, function (exception) { return reject(exception); });
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    it('should fail if postprocessor fails', function () { return __awaiter(_this, void 0, void 0, function () {
        var application, stream;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    application = fixtures_1.loadApplicationFixtureFromModule(fixtures_1.BasicInlineModule, function (builder) { return builder.postprocess(function (doc) {
                        throw new Error('This is an expected failure');
                    }); });
                    stream = application.prerender();
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            stream.subscribe(function (s) { return reject(new Error('Should have thrown an exception and failed')); }, resolve);
                        })];
                case 2: return [2 /*return*/, _a.sent()];
                case 3:
                    application.dispose();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); });
    afterEach(function () {
        if (typeof gc === 'function') {
            gc();
        }
    });
});
//# sourceMappingURL=from-module.js.map