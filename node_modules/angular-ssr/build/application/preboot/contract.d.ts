export declare type PrebootApplicationRoot = {
    appRoot: string | Array<string>;
};
export declare type PrebootSeparateRoots = {
    serverClientRoot: Array<{
        clientSelector: string;
        serverSelector: string;
    }>;
};
export declare type PrebootBaseOptions = {
    eventSelectors?: Array<EventSelector>;
    buffer?: boolean;
    uglify?: boolean;
    noInlineCache?: boolean;
};
export declare type PrebootConfiguration = (PrebootApplicationRoot | PrebootSeparateRoots | {}) & PrebootBaseOptions;
export interface EventSelector {
    selector: string;
    events: Array<string>;
    keyCodes?: Array<number>;
    preventDefault?: boolean;
    freeze?: boolean;
    action?: (node: Node, event: Event) => void;
    noReplay?: boolean;
}
export declare type PrebootQueryable = PrebootApplicationRoot & PrebootSeparateRoots & PrebootBaseOptions;
