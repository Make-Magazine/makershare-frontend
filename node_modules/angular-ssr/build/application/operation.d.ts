import { NgModuleFactory, Provider } from '@angular/core';
import { ApplicationBootstrapper, ApplicationStateReader, ComposedTransition, Postprocessor, VariantsMap } from './contracts';
import { PrebootQueryable } from './preboot';
import { Route } from '../route';
import { ServerPlatform } from '../platform/platform';
export interface RouteExtractionOperation<M> {
    platform: ServerPlatform;
    moduleFactory: NgModuleFactory<M>;
    templateDocument: string;
}
export interface RenderOperation {
    templateDocument: string;
    routes: Array<Route>;
    platform?: () => ServerPlatform;
    variants: VariantsMap;
    stateReader: ApplicationStateReader<any>;
    bootstrappers: Array<ApplicationBootstrapper>;
    postprocessors: Array<Postprocessor>;
    preboot: PrebootQueryable;
    providers: Array<Provider>;
    stabilizeTimeout?: number;
    pessimistic?: boolean;
    blacklist?: boolean;
}
export interface RenderVariantOperation<V> {
    scope: RenderOperation;
    transition?: ComposedTransition;
    uri: string;
    variant?: V;
}
