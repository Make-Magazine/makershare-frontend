Object.defineProperty(exports, "__esModule", { value: true });
var Selection = (function () {
    function Selection() {
    }
    Object.defineProperty(Selection.prototype, "anchorNode", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Selection.prototype, "anchorOffset", {
        get: function () {
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Selection.prototype, "baseNode", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Selection.prototype, "baseOffset", {
        get: function () {
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Selection.prototype, "extentNode", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Selection.prototype, "extentOffset", {
        get: function () {
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Selection.prototype, "focusNode", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Selection.prototype, "focusOffset", {
        get: function () {
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Selection.prototype, "isCollapsed", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Selection.prototype, "rangeCount", {
        get: function () {
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Selection.prototype, "type", {
        get: function () {
            return 'None';
        },
        enumerable: true,
        configurable: true
    });
    Selection.prototype.addRange = function (range) { };
    Selection.prototype.collapse = function (parentNode, offset) { };
    Selection.prototype.collapseToEnd = function () { };
    Selection.prototype.collapseToStart = function () { };
    Selection.prototype.containsNode = function (node, partlyContained) {
        return document.contains(node);
    };
    Selection.prototype.deleteFromDocument = function () { };
    Selection.prototype.empty = function () { };
    Selection.prototype.extend = function (newNode, offset) { };
    Selection.prototype.getRangeAt = function (index) {
        return new Range();
    };
    Selection.prototype.removeAllRanges = function () { };
    Selection.prototype.removeRange = function (range) { };
    Selection.prototype.selectAllChildren = function (parentNode) { };
    Selection.prototype.setBaseAndExtent = function (baseNode, baseOffset, extentNode, extentOffset) { };
    Selection.prototype.setPosition = function (parentNode, offset) { };
    Selection.prototype.toString = function () {
        return String();
    };
    return Selection;
}());
exports.Selection = Selection;
var getSelection = function () { return new Selection(); };
exports.bindSelection = function (target) { return [true, { getSelection: getSelection }]; };
//# sourceMappingURL=selection.js.map