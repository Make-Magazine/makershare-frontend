var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
describe('window', function () {
    it('is defined in the context of ng application execution', function () { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            expect(window).not.toBeNull();
            return [2 /*return*/];
        });
    }); });
    it('provides polyfills for browser functions', function () { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            expect(typeof window.addEventListener).toBe('function');
            expect(typeof window.alert).toBe('function');
            expect(typeof window.close).toBe('function');
            expect(typeof window.confirm).toBe('function');
            expect(typeof window.dispatchEvent).toBe('function');
            expect(typeof window.fetch).toBe('function');
            expect(typeof window.focus).toBe('function');
            expect(typeof window.getSelection).toBe('function');
            expect(typeof window.open).toBe('function');
            expect(typeof window.prompt).toBe('function');
            expect(typeof window.stop).toBe('function');
            expect(typeof window.setImmediate).toBe('function');
            expect(typeof window.clearImmediate).toBe('function');
            expect(typeof window.requestAnimationFrame).toBe('function');
            expect(typeof window.cancelAnimationFrame).toBe('function');
            return [2 /*return*/];
        });
    }); });
    it('blur', function () { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            expect(function () { return window.blur(); }).not.toThrow();
            return [2 /*return*/];
        });
    }); });
    it('focus', function () { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            expect(function () { return window.focus(); }).not.toThrow();
            expect(function () { return typeof HTMLElement.prototype.focus === 'function'; }).toBeTruthy();
            return [2 /*return*/];
        });
    }); });
    it('getSelection', function () { return __awaiter(_this, void 0, void 0, function () {
        var selection;
        return __generator(this, function (_a) {
            expect(function () { return selection = window.getSelection(); }).not.toThrow();
            expect(function () { return selection = window.document.getSelection(); }).not.toThrow();
            expect(selection).not.toBeNull();
            expect(selection.anchorNode).toBeNull();
            expect(selection.baseNode).toBeNull();
            expect(function () { return selection.removeAllRanges(); }).not.toThrow();
            return [2 /*return*/];
        });
    }); });
    it('alert', function () { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            expect(typeof alert).toBe('function');
            expect(function () { return window.alert('Alert'); }).not.toThrow();
            return [2 /*return*/];
        });
    }); });
    it('confirm', function () { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            expect(typeof confirm).toBe('function');
            expect(window.confirm('Yes?')).toBe(true);
            return [2 /*return*/];
        });
    }); });
    it('prompt', function () {
        expect(typeof prompt).toBe('function');
        expect(window.prompt('Hello')).toBe('');
    });
    it('print', function () {
        expect(typeof print).toBe('function');
        expect(function () { return window.print(); }).not.toThrow();
    });
    describe('Base64 implementation', function () {
        it('has working atoa', function () {
            expect(atob('hello there')).toBe('ée¢Ø^­');
        });
        it('has working btoa', function () {
            expect(btoa('Hello there')).toBe('SGVsbG8gdGhlcmU=');
        });
    });
    describe('history', function () {
        it('is defined in the context of ng application execution', function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                expect(window.history).not.toBeNull();
                expect(window.history.state).toBeUndefined();
                return [2 /*return*/];
            });
        }); });
    });
    describe('MutationObserver', function () {
        it('provides a constructor implementation', function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                expect(function () { return new MutationObserver(function () { }); }).not.toThrow();
                return [2 /*return*/];
            });
        }); });
    });
});
//# sourceMappingURL=window.js.map