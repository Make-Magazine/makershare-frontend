var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var os_1 = require("os");
var chalk = require("chalk");
var Exception = (function (_super) {
    __extends(Exception, _super);
    function Exception(msg, innerException) {
        var _this = _super.call(this, innerException ? chalk.red(msg) + " -> " + chalk.red(innerException.stack || '') : chalk.red(msg)) || this;
        _this.innerException = innerException;
        return _this;
    }
    return Exception;
}(Error));
exports.Exception = Exception;
var AggregateException = (function (_super) {
    __extends(AggregateException, _super);
    function AggregateException(exceptions) {
        var _this = _super.call(this, "Multiple exceptions occurred (" + exceptions.length + ") " + chalk.red("[" + exceptions.map(function (e) { return e.stack; }).join(', ') + "]")) || this;
        _this.exceptions = exceptions;
        return _this;
    }
    Object.defineProperty(AggregateException.prototype, "stack", {
        get: function () {
            return this.exceptions.map(function (e) { return e.stack; }).join(os_1.EOL);
        },
        enumerable: true,
        configurable: true
    });
    AggregateException.prototype.toString = function () {
        return this.exceptions.map(function (e) { return e.toString(); }).join(os_1.EOL);
    };
    return AggregateException;
}(Exception));
exports.AggregateException = AggregateException;
var NotImplementedException = (function (_super) {
    __extends(NotImplementedException, _super);
    function NotImplementedException() {
        return _super.call(this, 'Not implemented') || this;
    }
    return NotImplementedException;
}(Exception));
exports.NotImplementedException = NotImplementedException;
var NotSupportedException = (function (_super) {
    __extends(NotSupportedException, _super);
    function NotSupportedException() {
        return _super.call(this, 'This operation is not supported in a browserless context and never will be') || this;
    }
    return NotSupportedException;
}(Exception));
exports.NotSupportedException = NotSupportedException;
var CompilerException = (function (_super) {
    __extends(CompilerException, _super);
    function CompilerException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompilerException;
}(Exception));
exports.CompilerException = CompilerException;
var ConfigurationException = (function (_super) {
    __extends(ConfigurationException, _super);
    function ConfigurationException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ConfigurationException;
}(Exception));
exports.ConfigurationException = ConfigurationException;
var FilesystemException = (function (_super) {
    __extends(FilesystemException, _super);
    function FilesystemException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return FilesystemException;
}(Exception));
exports.FilesystemException = FilesystemException;
var ModuleException = (function (_super) {
    __extends(ModuleException, _super);
    function ModuleException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ModuleException;
}(Exception));
exports.ModuleException = ModuleException;
var OutputException = (function (_super) {
    __extends(OutputException, _super);
    function OutputException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return OutputException;
}(Exception));
exports.OutputException = OutputException;
var PlatformException = (function (_super) {
    __extends(PlatformException, _super);
    function PlatformException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PlatformException;
}(Exception));
exports.PlatformException = PlatformException;
var RendererException = (function (_super) {
    __extends(RendererException, _super);
    function RendererException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RendererException;
}(Exception));
exports.RendererException = RendererException;
var ResourceException = (function (_super) {
    __extends(ResourceException, _super);
    function ResourceException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ResourceException;
}(Exception));
exports.ResourceException = ResourceException;
var RuntimeException = (function (_super) {
    __extends(RuntimeException, _super);
    function RuntimeException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RuntimeException;
}(Exception));
exports.RuntimeException = RuntimeException;
var RouteException = (function (_super) {
    __extends(RouteException, _super);
    function RouteException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return RouteException;
}(Exception));
exports.RouteException = RouteException;
var SnapshotException = (function (_super) {
    __extends(SnapshotException, _super);
    function SnapshotException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SnapshotException;
}(Exception));
exports.SnapshotException = SnapshotException;
var StaticAnalysisException = (function (_super) {
    __extends(StaticAnalysisException, _super);
    function StaticAnalysisException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StaticAnalysisException;
}(Exception));
exports.StaticAnalysisException = StaticAnalysisException;
var TranspileException = (function (_super) {
    __extends(TranspileException, _super);
    function TranspileException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TranspileException;
}(Exception));
exports.TranspileException = TranspileException;
//# sourceMappingURL=exception.js.map