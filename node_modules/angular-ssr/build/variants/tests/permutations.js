Object.defineProperty(exports, "__esModule", { value: true });
var permutations_1 = require("../permutations");
describe('Variants', function () {
    it('can return all permutations of variant options', function () {
        var combinations = permutations_1.permutations({
            language: {
                transition: function (injector, language) { },
                values: ['en-US', 'en-CA', 'fr-FR'],
            },
            production: {
                transition: function (injector, prod) { },
                values: [true, false]
            },
            anonymous: {
                transition: function (injector, anonymous) { },
                values: [true, false]
            }
        });
        expect(combinations.size).toBe(12);
        var keys = Array.from(combinations.keys());
        expect(keys.filter(function (s) { return s.production === true; }).length).toBe(6);
        expect(keys.filter(function (s) { return s.language === 'en-US'; }).length).toBe(4);
        expect(keys.filter(function (s) { return s.language === 'en-CA'; }).length).toBe(4);
        expect(keys.filter(function (s) { return s.language === 'fr-FR'; }).length).toBe(4);
    });
    it('composes variant transitions into one function', function () {
        var combinations = permutations_1.permutations({
            production: {
                transition: function (injector, prod) { injector.prod = prod; },
                values: [true, false]
            },
            anonymous: {
                transition: function (injector, anon) { injector.anon = anon; },
                values: [true, false]
            }
        });
        var pairs = Array.from(combinations.entries());
        for (var _i = 0, pairs_1 = pairs; _i < pairs_1.length; _i++) {
            var _a = pairs_1[_i], variant = _a[0], transition = _a[1];
            var obj = {};
            transition(obj);
            expect(obj['anon']).toBe(variant.anonymous);
            expect(obj['prod']).toBe(variant.production);
        }
    });
});
//# sourceMappingURL=permutations.js.map