Object.defineProperty(exports, "__esModule", { value: true });
var exception_1 = require("../../exception");
var createDocument = require('domino-modernized').createDocument;
exports.transformAndSerializeDocument = function (processors, document) {
    var renderedDocument = preprocess(processors, document);
    if (/<!doctype html>/i.test(renderedDocument)) {
        return renderedDocument;
    }
    return "<!doctype html>" + renderedDocument;
};
var preprocess = function (processors, document) {
    if (processors == null || processors.length === 0) {
        return document.documentElement.outerHTML;
    }
    for (var index = 0; index < processors.length; ++index) {
        var processor = processors[index];
        switch (processor.length) {
            case 1:
                processor(document); // mutated the document itself
                break;
            case 2:
                var newDocument = processor(document, document.documentElement.outerHTML);
                switch (typeof newDocument) {
                    case 'string':
                        if (index === processors.length - 1) {
                            return newDocument; // optimization, no need to recreate the document
                        }
                        document.documentElement = createDocument(newDocument); // have another preprocessor to run
                        break;
                    default:
                        if (newDocument != null) {
                            throw new exception_1.SnapshotException("Invalid postprocessor result type: " + typeof newDocument + " (should be void or string)");
                        }
                        break;
                }
                break;
            default:
                throw new exception_1.SnapshotException("A postprocessor function must accept one or two arguments, not " + processor.length);
        }
    }
    return document.documentElement.outerHTML;
};
//# sourceMappingURL=transform.js.map