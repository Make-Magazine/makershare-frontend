export declare class TrieNode<T> {
    key: any;
    value: any;
    constructor(key: any, value?: any);
    insert(key: any, value?: T): TrieNode<T>;
    find(key: any): TrieNode<T> | null;
    leaf(): boolean;
    protected children: Map<any, TrieNode<T>>;
}
export declare class Trie<V, T> {
    private readonly root;
    private keys;
    constructor(prototypical?: V);
    insert(variant: V, value: T): TrieNode<T>;
    query(variant: V): T | undefined;
    private assert(keys);
}
